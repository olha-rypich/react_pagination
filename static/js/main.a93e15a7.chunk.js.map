{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","pages","Math","ceil","className","cn","disabled","href","onClick","map","page","active","changeCurrentPage","length","items","App","useState","setCurrentPage","setPerPage","firstItem","lastItem","visibleItems","id","value","onChange","event","target","selectPerPage","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAGMC,EAAQX,EAAW,EADNY,KAAKC,KAAKN,EAAQC,IAqBrC,OACE,qBAAIM,UAAU,aAAd,UACE,oBACEA,UAAWC,IAAG,YAAa,CACzBC,SAA0B,IAAhBP,IAFd,SAKE,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBR,EACfS,QAxBmB,WACL,IAAhBT,GACFC,EAAaD,EAAc,IAiBzB,oBAWDE,EAAMQ,KAAI,SAAAC,GAAI,OACb,oBACEN,UAAWC,IAAG,YAAa,CACzBM,OAAQD,IAASX,IAFrB,SAME,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBA/CO,SAACE,GACrBA,IAASX,GACXC,EAAaU,GA6CQE,CAAkBF,IAJnC,SAMGA,KAREA,MAaT,oBACEN,UAAWC,IAAG,YAAa,CACzBC,SAAUP,IAAgBE,EAAMA,EAAMY,OAAS,KAFnD,SAKE,mBACE,UAAQ,WACRT,UAAU,YACVG,KAAK,QACL,gBAAeR,IAAgBE,EAAMA,EAAMY,OAAS,GACpDL,QApDe,WACjBT,IAAgBE,EAAMA,EAAMY,OAAS,IACvCb,EAAaD,EAAc,IA6CzB,wBCzEFe,EAAQxB,EAAW,EAAG,IACzBmB,KAAI,SAAAf,GAAC,qBAAYA,MAEPqB,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAOjB,EAAP,KAAoBkB,EAApB,KACA,EAA8BD,mBAAS,GAAvC,mBAAOlB,EAAP,KAAgBoB,EAAhB,KAEMrB,EAAQiB,EAAMD,OAEdM,EAAYpB,EAAcD,GAAWA,EAAU,GAEjDsB,EAAYrB,EAAcD,EAAWD,EACrCA,EACAE,EAAcD,EAEZuB,EAAe/B,EAAW6B,EAAWC,GAEvCA,EAAWvB,IACbuB,EAAWvB,GAYb,OACE,sBAAKO,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWL,EADX,mBACiCoB,EADjC,cACgDC,EADhD,eAC+DvB,EAD/D,OAIA,sBAAKO,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRkB,GAAG,kBACHlB,UAAU,eACVmB,MAAOzB,EACP0B,SAAU,SAAAC,GAAK,OApBH,SAACA,GACrBP,GAAYO,EAAMC,OAAOH,OACzBN,EAAe,GAkBYU,CAAcF,IALnC,UAOE,wBAAQF,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOK,QAAQ,kBAAkBxB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEP,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACbC,aA1Ca,SAACU,GAClBO,EAAeP,MA4Cb,6BACGW,EAAaZ,KAAI,SAAAoB,GAAI,OACpB,oBAAI,UAAQ,OAAZ,wBAA4BA,cCvEtCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a93e15a7.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const countPages = Math.ceil(total / perPage);\n  const pages = getNumbers(1, countPages);\n\n  const changeCurrentPage = (page: number) => {\n    if (page !== currentPage) {\n      onPageChange(page);\n    }\n  };\n\n  const moveToPreviousPage = () => {\n    if (currentPage !== 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const moveToNextPage = () => {\n    if (currentPage !== pages[pages.length - 1]) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={cn('page-item', {\n          disabled: currentPage === 1,\n        })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={moveToPreviousPage}\n        >\n          «\n        </a>\n      </li>\n\n      {pages.map(page => (\n        <li\n          className={cn('page-item', {\n            active: page === currentPage,\n          })}\n          key={page}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => changeCurrentPage(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={cn('page-item', {\n          disabled: currentPage === pages[pages.length - 1],\n        })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === pages[pages.length - 1]}\n          onClick={moveToNextPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n\n  const total = items.length;\n\n  const firstItem = currentPage * perPage - (perPage - 1);\n\n  let lastItem = (currentPage * perPage) > total\n    ? total\n    : currentPage * perPage;\n\n  const visibleItems = getNumbers(firstItem, lastItem);\n\n  if (lastItem > total) {\n    lastItem = total;\n  }\n\n  const changePage = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  const selectPerPage = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItem} - ${lastItem} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={event => selectPerPage(event)}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={changePage}\n      />\n\n      <ul>\n        {visibleItems.map(item => (\n          <li data-cy=\"item\">{`Item ${item}`}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}